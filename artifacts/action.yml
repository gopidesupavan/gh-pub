# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: "Upload as artifacts"
description: "Uploads the release distributions as artifacts"

inputs:
  artifact-config:
    description: >
      Json config to find publishing packages. it contains all the information required to publish the packages to PyPI. eg:
      artifact:
        id: artifact
        description: "Find artifacts to publish to PyPI"
        exclude:
          - type: regex
            pattern: ".*(.asc|.sha512)$"
    required: true

  temp-dir:
    description: >
      Checkout directory of svn repo, this is used to checkout the svn repo.
    required: false
    default: "asf-dist"

  repo-path:
    description: >
      Path to the svn repo. Lets say to publish the packages from the dev pypi folder.
      eg: svn repo structure is https://dist.apache.org/repos/dist/
        dev/airflow/providers/pypi-rc/
      
      now to publish the packages from dev pypi providers folder, set url and path like below in the release-config.yml
      
      url: https://dist.apache.org/repos/dist/dev/airflow
      repo-path: providers/pypi-rc/
    required: true

  mode:
    description: >
      Mode to run the action, The default mode is 'VERIFY' which will only verify the packages and displays the what will be published.
      to publish the packages to PyPI set the mode to 'RELEASE'.
    required: false
    default: "VERIFY"

  publisher-name:
    description: >
      Name of the publisher eg: providers, this is used to name the steps in the workflow
    required: true

  if-no-files-found:
    description: >
      The desired behavior if no files are found using the provided path.
      
      Available Options:
        warn: Output a warning but do not fail the action
        error: Fail the action with an error message
        ignore: Do not output any warnings or errors, the action does not fail
    default: 'warn'
  retention-days:
    description: >
      Duration after which artifact will expire in days. 0 means using default retention.

      Minimum 1 day.
      Maximum 90 days unless changed from the repository settings page.
    default: '5'
  compression-level:
    description: >
      The level of compression for Zlib to be applied to the artifact archive.
      The value can range from 0 to 9:
      - 0: No compression
      - 1: Best speed
      - 6: Default compression (same as GNU Gzip)
      - 9: Best compression
      Higher levels will result in better compression, but will take longer to complete.
      For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
    default: '6'
  overwrite:
    description: >
      If true, an artifact with a matching name will be deleted before a new one is uploaded.
      If false, the action will fail if an artifact for the given name already exists.
      Does not fail if the artifact does not exist.
    default: 'false'

  artifact-name:
    description: >
      Name of the artifact to be uploaded
    required: false
    default: "pypi-packages"

runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: "Find artifacts to publish"
      shell: bash
      id: find-artifacts
      env:
        ARTIFACTS_CONFIG: ${{ inputs.artifact-config }}
        MODE: ${{ inputs.mode }}
        DIST_PATH: "${{ github.workspace }}/${{ inputs.temp-dir }}/dist"
      run: |
        python3 -m pip install uv
        uv run $GITHUB_ACTION_PATH/publish_packages_finder.py
      working-directory: "./${{ inputs.temp-dir }}/${{ inputs.repo-path }}"

    - name: "Upload ${{ inputs.publisher-name }} to artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: "${{ github.workspace }}/${{ inputs.temp-dir }}/dist/*"
        retention-days: ${{ inputs.retention-days }}
        if-no-files-found: ${{ inputs.if-no-files-found }}
        compression-level: ${{ inputs.compression-level }}
        overwrite: ${{ inputs.overwrite }}